syntax = "proto3";

option go_package = "github.com/mingkaic/testify/proto";

package testify;

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

message Bytes { bytes data = 1; }
message Doubles { repeated double data = 1; }
message Floats { repeated float data = 1; }
message Int32s { repeated int32 data = 1; }
message Int64s { repeated int64 data = 1; }
message Uint32s { repeated uint32 data = 1; }
message Uint64s { repeated uint64 data = 1; }
message Tree
{
    uint32 root = 1;
    Graph graph = 2;
}
message Graph
{
    bytes matrix = 1;
    uint32 nverts = 2;
}

enum DTYPE
{
    BYTES = 0;
    DOUBLES = 1;
    FLOATS = 2;
    INT32S = 3;
    UINT32S = 4;
    INT64S = 5;
    UINT64S = 6;
    // Graph
    GRAPH = 7;
    NTREE = 8;
}

message CaseData
{
    google.protobuf.Any data = 1;
    DTYPE dtype = 2;
}

message GeneratedCase
{
    map<string,CaseData> inputs = 1;
    map<string,CaseData> outputs = 2;
}

message TransferName
{
    string name = 1;
}

message TransferCase
{
    string name = 1;
    GeneratedCase results = 2;
}

service Dora
{
    rpc ListTestcases(google.protobuf.Empty) returns (stream TransferName) {}
    rpc GetTestcase(TransferName) returns (stream GeneratedCase) {}
    rpc GetOneTestcase(TransferName) returns (GeneratedCase) {}

    rpc AddTestcase(TransferCase) returns (google.protobuf.Empty) {}
    rpc RemoveTestcase(TransferName) returns (google.protobuf.Empty) {}
}

message Cases {
    repeated GeneratedCase cases = 1;
}

message CaseStorage
{
    map<string,Cases> storage = 1;
}
